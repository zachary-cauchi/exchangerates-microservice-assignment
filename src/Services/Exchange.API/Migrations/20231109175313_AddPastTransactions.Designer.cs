// <auto-generated />
using System;
using Exchange.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Exchange.API.Migrations
{
    [DbContext(typeof(ExchangeAPIContext))]
    [Migration("20231109175313_AddPastTransactions")]
    partial class AddPastTransactions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("account_balance_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("currency_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("past_transaction_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("user_hilo")
                .IncrementsBy(10);

            modelBuilder.Entity("Exchange.API.Models.AccountBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "account_balance_hilo");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(19,4)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("UserId");

                    b.ToTable("account_balance", (string)null);
                });

            modelBuilder.Entity("Exchange.API.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "currency_hilo");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("currency", (string)null);
                });

            modelBuilder.Entity("Exchange.API.Models.PastTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "past_transaction_hilo");

                    b.Property<decimal>("DebitedAmount")
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(19,4)");

                    b.Property<int>("FromAccountBalanceId")
                        .HasColumnType("int");

                    b.Property<int>("FromCurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeEffected")
                        .HasColumnType("datetime2");

                    b.Property<int>("ToAccountBalanceId")
                        .HasColumnType("int");

                    b.Property<int>("ToCurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromAccountBalanceId");

                    b.HasIndex("FromCurrencyId");

                    b.HasIndex("ToAccountBalanceId");

                    b.HasIndex("ToCurrencyId");

                    b.HasIndex("UserId");

                    b.ToTable("past_transaction", (string)null);
                });

            modelBuilder.Entity("Exchange.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "user_hilo");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LastName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("Exchange.API.Models.AccountBalance", b =>
                {
                    b.HasOne("Exchange.API.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exchange.API.Models.User", "User")
                        .WithMany("AccountBalances")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Exchange.API.Models.PastTransaction", b =>
                {
                    b.HasOne("Exchange.API.Models.AccountBalance", "FromAccountBalance")
                        .WithMany()
                        .HasForeignKey("FromAccountBalanceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Exchange.API.Models.Currency", "FromCurrency")
                        .WithMany()
                        .HasForeignKey("FromCurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Exchange.API.Models.AccountBalance", "ToAccountBalance")
                        .WithMany()
                        .HasForeignKey("ToAccountBalanceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Exchange.API.Models.Currency", "ToCurrency")
                        .WithMany()
                        .HasForeignKey("ToCurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Exchange.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FromAccountBalance");

                    b.Navigation("FromCurrency");

                    b.Navigation("ToAccountBalance");

                    b.Navigation("ToCurrency");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Exchange.API.Models.User", b =>
                {
                    b.Navigation("AccountBalances");
                });
#pragma warning restore 612, 618
        }
    }
}
